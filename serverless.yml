service:
  name: cli-login

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

custom:
  api_key_table_name: CLI-Login-API-Keys-${opt:stage}
  token_table_name: CLI-Login-Token-${opt:stage}
  user_table_name: CLI-Login-Users-${opt:stage}

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
    - Effect: Allow
      Action:
        - ses:SendEmail
      Resource: "arn:aws:ses:us-east-1:*:*"
  environment:
    STAGE: ${opt:stage}
    API_KEY_TABLE_NAME: ${self:custom.api_key_table_name}
    TOKEN_TABLE_NAME: ${self:custom.token_table_name}
    USER_TABLE_NAME: ${self:custom.user_table_name}
    BASE_URL: { "Fn::Join" : ["", [" https://", { "Ref" : "ApiGatewayRestApi" }, ".execute-api.us-east-1.amazonaws.com/${opt:stage}" ] ]  }

functions:
  root:
    handler: index.root
    events:
      - http:
          path: /
          method: post
          cors: true
  auth:
    handler: index.auth
    events:
      - http:
          path: auth
          method: post
          cors: true
  confirm:
    handler: index.confirm
    events:
      - http:
          path: confirm/{token}
          method: get
          request:
            parameters:
              paths:
                token: true

resources:
  Resources:
    APIKeyDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: key
            AttributeType: S
        KeySchema:
          -
            AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.api_key_table_name}
    TokenDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: token
            AttributeType: S
        KeySchema:
          -
            AttributeName: token
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.token_table_name}
    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.user_table_name}
